DATA EJEMPLO101;
INPUT REP BLOQUE A B C RENDIMIENTO @@;
CARDS;
1 1 0 0 1 4600 1 1 0 1 0 5135 1 1 1 0 0 4955 1 1 1 1 1 4725
1 2 0 0 0 3210 1 2 0 1 1 3670 1 2 1 0 1 3785 1 2 1 1 0 3965
2 1 1 0 1 3665 2 1 1 1 0 4255 2 1 0 1 1 4315 2 1 0 0 0 3970
2 2 0 0 1 3980 2 2 1 0 0 3175 2 2 0 1 0 4420 2 2 1 1 1 4580
3 1 0 1 1 3995 3 1 1 0 1 3510 3 1 0 0 0 4305 3 1 1 1 0 4030
3 2 1 0 0 4405 3 2 0 1 0 4575 3 2 0 0 1 3910 3 2 1 1 1 4065
4 1 1 1 1 3750 4 1 1 0 0 4175 4 1 0 1 0 3920 4 1 0 0 1 3280
4 2 1 1 0 2900 4 2 1 0 1 3575 4 2 0 1 1 3190 4 2 0 0 0 3530	
;
PROC GLM DATA=EJEMPLO101;
CLASS REP BLOQUE A B C;
MODEL RENDIMIENTO=BLOQUE(REP) A B A*B C A*C B*C A*B*C;

/* NOTA: Esta es la forma de un CONFUSIÓN TOTAL 
teniendo en cuenta la notación de los bloques en BLOQUE 1,2 */

/* Obtención de la tabla de doble entrada */

DATA TABLA_DOBLE_ENTRADA;
  SET EJEMPLO101;
  TOTAL = RENDIMIENTO;
RUN;

PROC SORT DATA=TABLA_DOBLE_ENTRADA;
  BY REP A B C;
RUN;

PROC MEANS DATA=TABLA_DOBLE_ENTRADA;
  BY REP A B C;
  VAR TOTAL;
  OUTPUT SUM= TOTALES;
RUN;

PROC MEANS DATA=EJEMPLO101;
  CLASS REP A B C;
  VAR RENDIMIENTO;
  OUTPUT SUM= TOTALES;
RUN;


/* Sumar por Réplica */
DATA TABLA_SUMA_REP;
  SET CONFUSIONPARCIAL;
  TOTAL_REP = RENDIMIENTO;
RUN;

PROC SORT DATA=TABLA_SUMA_REP;
  BY REP;
RUN;
